Tue Mar 08 08:11:19 CET 2022 : Apache Derby Network Server - 10.15.2.0 - (1873585) started and ready to accept connections on port 1527
----------------------------------------------------------------
Tue Mar 08 08:11:33 CET 2022:
Booting Derby version The Apache Software Foundation - Apache Derby - 10.15.2.0 - (1873585): instance a816c00e-017f-685e-3903-0000608c8c7a 
on database directory C:\public\SWT6\projects-orm\intro-orm\data\WorkLogDb with class loader ClassRealm[plugin>org.jheinzel.maven:derby-maven-plugin:1.4, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa] 
Loaded from file:/c:/public/SWT6/.m2/repository/org/apache/derby/derby/10.15.2.0/derby-10.15.2.0.jar
java.vendor=Oracle Corporation
java.runtime.version=17.0.2+8-86
user.dir=C:\public\SWT6\projects-orm\intro-orm
os.name=Windows 10
os.arch=amd64
os.version=10.0
derby.system.home=C:\public\SWT6\projects-orm\intro-orm\data
Database Class Loader started - derby.database.classpath=''
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 165), (SESSIONID = 0), (DATABASE = WorkLogDb), (DRDAID = {15}), Committing
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 165), (SESSIONID = 0), (DATABASE = WorkLogDb), (DRDAID = {15}), Rolling back
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 166), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = {15}), Committing
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 166), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = {15}), Committing
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: CALL SYSIBM.MetaData() :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: CALL SYSIBM.MetaData() :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: CALL SYSIBM.MetaData() :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: EXECUTE STATEMENT SYSIBM."METADATA" :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: EXECUTE STATEMENT SYSIBM."METADATA" :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: SELECT	M->allProceduresAreCallable(),	M->allTablesAreSelectable(),	M->nullsAreSortedHigh(),	M->nullsAreSortedLow(),	M->nullsAreSortedAtStart(),	M->nullsAreSortedAtEnd(),	M->usesLocalFiles(),	M->usesLocalFilePerTable(),	M->storesUpperCaseIdentifiers(),	M->storesLowerCaseIdentifiers(),	M->storesMixedCaseIdentifiers(),	M->storesUpperCaseQuotedIdentifiers(),	M->storesLowerCaseQuotedIdentifiers(),	M->storesMixedCaseQuotedIdentifiers(),	M->getSQLKeywords(),	M->getNumericFunctions(),	M->getStringFunctions(),	M->getSystemFunctions(),	M->getTimeDateFunctions(),	M->getSearchStringEscape(),	M->getExtraNameCharacters(),	M->supportsAlterTableWithAddColumn(),	M->supportsAlterTableWithDropColumn(),	M->supportsConvert(),	'1', M->supportsDifferentTableCorrelationNames(),	M->supportsExpressionsInOrderBy(),	M->supportsOrderByUnrelated(),	M->supportsGroupBy(),	M->supportsGroupByUnrelated(),		M->supportsGroupByBeyondSelect(),	M->supportsMultipleResultSets(),	M->supportsMultipleTransactions(),	M->supportsCoreSQLGrammar(),	M->supportsExtendedSQLGrammar(),	M->supportsANSI92IntermediateSQL(),	M->supportsANSI92FullSQL(),	M->supportsIntegrityEnhancementFacility(),	M->supportsOuterJoins(),	M->supportsFullOuterJoins(),	M->supportsLimitedOuterJoins(),	M->getSchemaTerm(),	M->getProcedureTerm(),	M->getCatalogTerm(),	M->isCatalogAtStart(),	M->getCatalogSeparator(),	M->supportsSchemasInDataManipulation(),	M->supportsSchemasInProcedureCalls(),	M->supportsSchemasInTableDefinitions(),	M->supportsSchemasInIndexDefinitions(),	M->supportsSchemasInPrivilegeDefinitions(),	M->supportsCatalogsInDataManipulation(),	M->supportsCatalogsInProcedureCalls(),	M->supportsCatalogsInTableDefinitions(),	M->supportsCatalogsInIndexDefinitions(),	M->supportsCatalogsInPrivilegeDefinitions(),	M->supportsPositionedDelete(),	M->supportsPositionedUpdate(),	M->supportsSelectForUpdate(),	M->supportsStoredProcedures(),	M->supportsSubqueriesInComparisons(),	M->supportsUnion(),	M->supportsUnionAll(),	M->supportsOpenCursorsAcrossCommit(),	M->supportsOpenCursorsAcrossRollback(),	M->supportsOpenStatementsAcrossCommit(),	M->supportsOpenStatementsAcrossRollback(),	M->getMaxBinaryLiteralLength(),	M->getMaxCharLiteralLength(),	M->getMaxColumnNameLength(),	M->getMaxColumnsInGroupBy(),	M->getMaxColumnsInIndex(),	M->getMaxColumnsInOrderBy(),	M->getMaxColumnsInSelect(),	M->getMaxColumnsInTable(),	M->getMaxConnections(),	M->getMaxCursorNameLength(),	M->getMaxIndexLength(),	M->getMaxSchemaNameLength(),	M->getMaxProcedureNameLength(),	M->getMaxCatalogNameLength(),	M->getMaxRowSize(),	M->doesMaxRowSizeIncludeBlobs(),	M->getMaxStatementLength(),	M->getMaxStatements(),	M->getMaxTableNameLength(),	M->getMaxTablesInSelect(),	M->getMaxUserNameLength(),	M->getDefaultTransactionIsolation(),	M->supportsTransactions(),	'1,2,4,8' ,	M->supportsDataDefinitionAndDataManipulationTransactions(),	M->supportsDataManipulationTransactionsOnly(),	M->dataDefinitionCausesTransactionCommit(),	M->dataDefinitionIgnoredInTransactions(), 	(cast (RTRIM(CAST(java.sql.ResultSet::TYPE_FORWARD_ONLY as CHAR(10))) AS VARCHAR(10)) || (',') || (cast (RTRIM(CAST(java.sql.ResultSet::TYPE_SCROLL_INSENSITIVE AS CHAR(10))) as VARCHAR(10)))), '1003,1007,1008;1004,1007,1008;1005', '','','','1003','1003','1003','','','',M->supportsBatchUpdates()from (values(getCurrentConnection()->getMetaData())) as DBMetaData(M) :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: SELECT	M->allProceduresAreCallable(),	M->allTablesAreSelectable(),	M->nullsAreSortedHigh(),	M->nullsAreSortedLow(),	M->nullsAreSortedAtStart(),	M->nullsAreSortedAtEnd(),	M->usesLocalFiles(),	M->usesLocalFilePerTable(),	M->storesUpperCaseIdentifiers(),	M->storesLowerCaseIdentifiers(),	M->storesMixedCaseIdentifiers(),	M->storesUpperCaseQuotedIdentifiers(),	M->storesLowerCaseQuotedIdentifiers(),	M->storesMixedCaseQuotedIdentifiers(),	M->getSQLKeywords(),	M->getNumericFunctions(),	M->getStringFunctions(),	M->getSystemFunctions(),	M->getTimeDateFunctions(),	M->getSearchStringEscape(),	M->getExtraNameCharacters(),	M->supportsAlterTableWithAddColumn(),	M->supportsAlterTableWithDropColumn(),	M->supportsConvert(),	'1', M->supportsDifferentTableCorrelationNames(),	M->supportsExpressionsInOrderBy(),	M->supportsOrderByUnrelated(),	M->supportsGroupBy(),	M->supportsGroupByUnrelated(),		M->supportsGroupByBeyondSelect(),	M->supportsMultipleResultSets(),	M->supportsMultipleTransactions(),	M->supportsCoreSQLGrammar(),	M->supportsExtendedSQLGrammar(),	M->supportsANSI92IntermediateSQL(),	M->supportsANSI92FullSQL(),	M->supportsIntegrityEnhancementFacility(),	M->supportsOuterJoins(),	M->supportsFullOuterJoins(),	M->supportsLimitedOuterJoins(),	M->getSchemaTerm(),	M->getProcedureTerm(),	M->getCatalogTerm(),	M->isCatalogAtStart(),	M->getCatalogSeparator(),	M->supportsSchemasInDataManipulation(),	M->supportsSchemasInProcedureCalls(),	M->supportsSchemasInTableDefinitions(),	M->supportsSchemasInIndexDefinitions(),	M->supportsSchemasInPrivilegeDefinitions(),	M->supportsCatalogsInDataManipulation(),	M->supportsCatalogsInProcedureCalls(),	M->supportsCatalogsInTableDefinitions(),	M->supportsCatalogsInIndexDefinitions(),	M->supportsCatalogsInPrivilegeDefinitions(),	M->supportsPositionedDelete(),	M->supportsPositionedUpdate(),	M->supportsSelectForUpdate(),	M->supportsStoredProcedures(),	M->supportsSubqueriesInComparisons(),	M->supportsUnion(),	M->supportsUnionAll(),	M->supportsOpenCursorsAcrossCommit(),	M->supportsOpenCursorsAcrossRollback(),	M->supportsOpenStatementsAcrossCommit(),	M->supportsOpenStatementsAcrossRollback(),	M->getMaxBinaryLiteralLength(),	M->getMaxCharLiteralLength(),	M->getMaxColumnNameLength(),	M->getMaxColumnsInGroupBy(),	M->getMaxColumnsInIndex(),	M->getMaxColumnsInOrderBy(),	M->getMaxColumnsInSelect(),	M->getMaxColumnsInTable(),	M->getMaxConnections(),	M->getMaxCursorNameLength(),	M->getMaxIndexLength(),	M->getMaxSchemaNameLength(),	M->getMaxProcedureNameLength(),	M->getMaxCatalogNameLength(),	M->getMaxRowSize(),	M->doesMaxRowSizeIncludeBlobs(),	M->getMaxStatementLength(),	M->getMaxStatements(),	M->getMaxTableNameLength(),	M->getMaxTablesInSelect(),	M->getMaxUserNameLength(),	M->getDefaultTransactionIsolation(),	M->supportsTransactions(),	'1,2,4,8' ,	M->supportsDataDefinitionAndDataManipulationTransactions(),	M->supportsDataManipulationTransactionsOnly(),	M->dataDefinitionCausesTransactionCommit(),	M->dataDefinitionIgnoredInTransactions(), 	(cast (RTRIM(CAST(java.sql.ResultSet::TYPE_FORWARD_ONLY as CHAR(10))) AS VARCHAR(10)) || (',') || (cast (RTRIM(CAST(java.sql.ResultSet::TYPE_SCROLL_INSENSITIVE AS CHAR(10))) as VARCHAR(10)))), '1003,1007,1008;1004,1007,1008;1005', '','','','1003','1003','1003','','','',M->supportsBatchUpdates()from (values(getCurrentConnection()->getMetaData())) as DBMetaData(M) :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: EXECUTE STATEMENT SYSIBM."METADATA" :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement with 1 parameters begin parameter #1: null :end parameter 
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement with 1 parameters begin parameter #1: 1 :end parameter 
Tue Mar 08 08:11:33 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: select sys.sysschemas.schemaname as sequence_schema, sys.syssequences.* from sys.syssequences left join sys.sysschemas on sys.syssequences.schemaid = sys.sysschemas.schemaid :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: select sys.sysschemas.schemaname as sequence_schema, sys.syssequences.* from sys.syssequences left join sys.sysschemas on sys.syssequences.schemaid = sys.sysschemas.schemaid :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: select sys.sysschemas.schemaname as sequence_schema, sys.syssequences.* from sys.syssequences left join sys.sysschemas on sys.syssequences.schemaid = sys.sysschemas.schemaid :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 167), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: CALL SYSIBM.SQLTABLES(?,?,?,?,?) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: CALL SYSIBM.SQLTABLES(?,?,?,?,?) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: CALL SYSIBM.SQLTABLES(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: 'TABLE','VIEW' :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: EXECUTE STATEMENT SYS."getTables" :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: EXECUTE STATEMENT SYS."getTables" :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, SCHEMANAME AS TABLE_SCHEM,  TABLENAME AS TABLE_NAME, (CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12))) AS TABLE_TYPE, CAST ('' AS VARCHAR(128)) AS REMARKS, CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, CAST (NULL AS VARCHAR(128)) AS TYPE_SCHEM, CAST (NULL AS VARCHAR(128)) AS TYPE_NAME, CAST (NULL AS VARCHAR(128)) AS SELF_REFERENCING_COL_NAME, CAST (NULL AS VARCHAR(128)) AS REF_GENERATION FROM SYS.SYSTABLES, SYS.SYSSCHEMAS, (VALUES ('T','TABLE'), ('S','SYSTEM TABLE'), ('V', 'VIEW'), ('A', 'SYNONYM')) T(TTABBREV,TABLE_TYPE) WHERE (TTABBREV=TABLETYPE 	AND (SYS.SYSTABLES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) AND ((1=1) OR ? IS NOT NULL) AND (SYS.SYSSCHEMAS.SCHEMANAME LIKE ?) AND (TABLENAME LIKE ?) AND TABLETYPE IN (?, ?, ?, ?)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, SCHEMANAME AS TABLE_SCHEM,  TABLENAME AS TABLE_NAME, (CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12))) AS TABLE_TYPE, CAST ('' AS VARCHAR(128)) AS REMARKS, CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, CAST (NULL AS VARCHAR(128)) AS TYPE_SCHEM, CAST (NULL AS VARCHAR(128)) AS TYPE_NAME, CAST (NULL AS VARCHAR(128)) AS SELF_REFERENCING_COL_NAME, CAST (NULL AS VARCHAR(128)) AS REF_GENERATION FROM SYS.SYSTABLES, SYS.SYSSCHEMAS, (VALUES ('T','TABLE'), ('S','SYSTEM TABLE'), ('V', 'VIEW'), ('A', 'SYNONYM')) T(TTABBREV,TABLE_TYPE) WHERE (TTABBREV=TABLETYPE 	AND (SYS.SYSTABLES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) AND ((1=1) OR ? IS NOT NULL) AND (SYS.SYSSCHEMAS.SCHEMANAME LIKE ?) AND (TABLENAME LIKE ?) AND TABLETYPE IN (?, ?, ?, ?)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: EXECUTE STATEMENT SYS."getTables" :End prepared statement with 7 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: T :end parameter begin parameter #5: V :end parameter begin parameter #6: NULL :end parameter begin parameter #7: NULL :end parameter 
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 190), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: CALL SYSIBM.SQLCOLUMNS(?,?,?,?,?) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: CALL SYSIBM.SQLCOLUMNS(?,?,?,?,?) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: CALL SYSIBM.SQLCOLUMNS(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: NULL :end parameter begin parameter #4: % :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: EXECUTE STATEMENT SYS."getColumns" :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: EXECUTE STATEMENT SYS."getColumns" :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, C.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, (CAST (C.COLUMNDATATYPE.getTypeName() AS VARCHAR(128))) AS TYPE_NAME, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::REAL, java.sql.Types::DOUBLE,java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::FLOAT)) THEN C.COLUMNDATATYPE.getPrecision() ELSE C.COLUMNDATATYPE.getMaximumWidth() END AS COLUMN_SIZE, CAST( NULL AS INT) AS BUFFER_LENGTH, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::DECIMAL, 				java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN C.COLUMNDATATYPE.getScale() ELSE CAST(NULL AS INT) END AS DECIMAL_DIGITS, 											CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::REAL, 					java.sql.Types::DOUBLE, java.sql.Types::FLOAT)) THEN 2 ELSE (CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 10 ELSE CAST (NULL AS INTEGER) END) END AS NUM_PREC_RADIX, 											CASE WHEN C.COLUMNDATATYPE.isNullable() THEN java.sql.DatabaseMetaData::columnNullable ELSE java.sql.DatabaseMetaData::columnNoNulls END AS NULLABLE, CAST ('' AS VARCHAR(128)) AS REMARKS, CASE WHEN (COLUMNDEFAULT IS NULL) THEN  (CASE WHEN (AUTOINCREMENTINC is NULL) THEN  CAST (NULL AS VARCHAR(254)) ELSE 'AUTOINCREMENT: start ' || -- The AUTOINCREMENT* columns have incorrect meta-data 
 -- if the database was created with an old version of  
 -- Derby (see DERBY-1745 and DERBY-5274), and the CHAR 
 -- function won't work. Wrap them in a BIGINT function 
 -- call to fix the meta-data, even though the columns  
 -- already are of type BIGINT.                         
 RTRIM(CHAR(BIGINT(AUTOINCREMENTSTART))) || ' increment ' || RTRIM(CHAR(BIGINT(AUTOINCREMENTINC))) END ) ELSE CAST (COLUMNDEFAULT AS VARCHAR(254)) END AS COLUMN_DEF, CAST( NULL AS INT) AS SQL_DATA_TYPE, CAST( NULL AS INT) AS SQL_DATETIME_SUB, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::CHAR,	 				java.sql.Types::VARCHAR)) THEN (CASE WHEN (C.COLUMNDATATYPE.getMaximumWidth() * 2.0 > 2147483647) THEN 2147483647 ELSE (C.COLUMNDATATYPE.getMaximumWidth() * 2) END) ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH,										C.COLUMNNUMBER AS ORDINAL_POSITION, CAST ((CASE WHEN C.COLUMNDATATYPE.isNullable() THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, CAST (NULL AS VARCHAR(128)) AS SCOPE_CATALOG, CAST (NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST (NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST (NULL AS SMALLINT) AS SOURCE_DATA_TYPE, CAST ((CASE WHEN (AUTOINCREMENTINC is not NULL) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_AUTOINCREMENT, CAST ((CASE WHEN (C.COLUMNDEFAULT IS NOT NULL AND C.COLUMNDEFAULT.toString().startsWith( 'GENERATED ALWAYS AS' ) ) THEN 'YES' ELSE  'NO' END) AS VARCHAR(128)) AS IS_GENERATEDCOLUMN, 										CAST (NULL AS VARCHAR(128)) AS SCOPE_CATLOG FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCOLUMNS C WHERE C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?) AND (T.TABLENAME LIKE ?) AND (C.COLUMNNAME LIKE ?) ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, C.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, (CAST (C.COLUMNDATATYPE.getTypeName() AS VARCHAR(128))) AS TYPE_NAME, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::REAL, java.sql.Types::DOUBLE,java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::FLOAT)) THEN C.COLUMNDATATYPE.getPrecision() ELSE C.COLUMNDATATYPE.getMaximumWidth() END AS COLUMN_SIZE, CAST( NULL AS INT) AS BUFFER_LENGTH, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::DECIMAL, 				java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN C.COLUMNDATATYPE.getScale() ELSE CAST(NULL AS INT) END AS DECIMAL_DIGITS, 											CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::REAL, 					java.sql.Types::DOUBLE, java.sql.Types::FLOAT)) THEN 2 ELSE (CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 10 ELSE CAST (NULL AS INTEGER) END) END AS NUM_PREC_RADIX, 											CASE WHEN C.COLUMNDATATYPE.isNullable() THEN java.sql.DatabaseMetaData::columnNullable ELSE java.sql.DatabaseMetaData::columnNoNulls END AS NULLABLE, CAST ('' AS VARCHAR(128)) AS REMARKS, CASE WHEN (COLUMNDEFAULT IS NULL) THEN  (CASE WHEN (AUTOINCREMENTINC is NULL) THEN  CAST (NULL AS VARCHAR(254)) ELSE 'AUTOINCREMENT: start ' || -- The AUTOINCREMENT* columns have incorrect meta-data 
 -- if the database was created with an old version of  
 -- Derby (see DERBY-1745 and DERBY-5274), and the CHAR 
 -- function won't work. Wrap them in a BIGINT function 
 -- call to fix the meta-data, even though the columns  
 -- already are of type BIGINT.                         
 RTRIM(CHAR(BIGINT(AUTOINCREMENTSTART))) || ' increment ' || RTRIM(CHAR(BIGINT(AUTOINCREMENTINC))) END ) ELSE CAST (COLUMNDEFAULT AS VARCHAR(254)) END AS COLUMN_DEF, CAST( NULL AS INT) AS SQL_DATA_TYPE, CAST( NULL AS INT) AS SQL_DATETIME_SUB, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::CHAR,	 				java.sql.Types::VARCHAR)) THEN (CASE WHEN (C.COLUMNDATATYPE.getMaximumWidth() * 2.0 > 2147483647) THEN 2147483647 ELSE (C.COLUMNDATATYPE.getMaximumWidth() * 2) END) ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH,										C.COLUMNNUMBER AS ORDINAL_POSITION, CAST ((CASE WHEN C.COLUMNDATATYPE.isNullable() THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, CAST (NULL AS VARCHAR(128)) AS SCOPE_CATALOG, CAST (NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST (NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST (NULL AS SMALLINT) AS SOURCE_DATA_TYPE, CAST ((CASE WHEN (AUTOINCREMENTINC is not NULL) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_AUTOINCREMENT, CAST ((CASE WHEN (C.COLUMNDEFAULT IS NOT NULL AND C.COLUMNDEFAULT.toString().startsWith( 'GENERATED ALWAYS AS' ) ) THEN 'YES' ELSE  'NO' END) AS VARCHAR(128)) AS IS_GENERATEDCOLUMN, 										CAST (NULL AS VARCHAR(128)) AS SCOPE_CATLOG FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCOLUMNS C WHERE C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?) AND (T.TABLENAME LIKE ?) AND (C.COLUMNNAME LIKE ?) ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: EXECUTE STATEMENT SYS."getColumns" :End prepared statement with 4 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: % :end parameter 
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 204), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Begin compiling prepared statement: create table Employee (id bigint generated by default as identity, firstName varchar(255), lastName varchar(255), dateOfBirth date, primary key (id)) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), End compiling prepared statement: create table Employee (id bigint generated by default as identity, firstName varchar(255), lastName varchar(255), dateOfBirth date, primary key (id)) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Executing prepared statement: create table Employee (id bigint generated by default as identity, firstName varchar(255), lastName varchar(255), dateOfBirth date, primary key (id)) :End prepared statement
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Committing
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Rolling back
Tue Mar 08 08:11:34 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 218), (SESSIONID = 1), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4339779544201401141{15}), Rolling back
Tue Mar 08 08:12:07 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 233), (SESSIONID = 2), (DATABASE = WorkLogDb), (DRDAID = {50}), Committing
Tue Mar 08 08:12:07 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 233), (SESSIONID = 2), (DATABASE = WorkLogDb), (DRDAID = {50}), Rolling back
Tue Mar 08 08:12:07 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 234), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = {50}), Committing
Tue Mar 08 08:12:07 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 234), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = {50}), Committing
Tue Mar 08 08:12:07 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: CALL SYSIBM.MetaData() :End prepared statement
Tue Mar 08 08:12:07 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: EXECUTE STATEMENT SYSIBM."METADATA" :End prepared statement
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Begin compiling prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), End compiling prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement with 1 parameters begin parameter #1: null :end parameter 
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Begin compiling prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), End compiling prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement with 1 parameters begin parameter #1: 1 :end parameter 
Tue Mar 08 08:12:08 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: select sys.sysschemas.schemaname as sequence_schema, sys.syssequences.* from sys.syssequences left join sys.sysschemas on sys.syssequences.schemaid = sys.sysschemas.schemaid :End prepared statement
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 235), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 239), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: CALL SYSIBM.SQLTABLES(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: 'TABLE','VIEW' :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 239), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: EXECUTE STATEMENT SYS."getTables" :End prepared statement with 7 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: T :end parameter begin parameter #5: V :end parameter begin parameter #6: NULL :end parameter begin parameter #7: NULL :end parameter 
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 239), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: CALL SYSIBM.SQLCOLUMNS(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: NULL :end parameter begin parameter #4: % :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Executing prepared statement: EXECUTE STATEMENT SYS."getColumns" :End prepared statement with 4 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: % :end parameter 
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:12:09 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:17:31 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Committing
Tue Mar 08 08:17:31 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Rolling back
Tue Mar 08 08:17:31 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 241), (SESSIONID = 3), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4109814488228760430{50}), Rolling back
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 243), (SESSIONID = 4), (DATABASE = WorkLogDb), (DRDAID = {389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 243), (SESSIONID = 4), (DATABASE = WorkLogDb), (DRDAID = {389}), Rolling back
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 244), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = {389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 244), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = {389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: CALL SYSIBM.MetaData() :End prepared statement
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: EXECUTE STATEMENT SYSIBM."METADATA" :End prepared statement
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement with 1 parameters begin parameter #1: null :end parameter 
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement with 1 parameters begin parameter #1: 1 :end parameter 
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: select sys.sysschemas.schemaname as sequence_schema, sys.syssequences.* from sys.syssequences left join sys.sysschemas on sys.syssequences.schemaid = sys.sysschemas.schemaid :End prepared statement
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 245), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 247), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: CALL SYSIBM.SQLTABLES(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: 'TABLE','VIEW' :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 247), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: EXECUTE STATEMENT SYS."getTables" :End prepared statement with 7 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: T :end parameter begin parameter #5: V :end parameter begin parameter #6: NULL :end parameter begin parameter #7: NULL :end parameter 
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 247), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: CALL SYSIBM.SQLCOLUMNS(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: NULL :end parameter begin parameter #4: % :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Executing prepared statement: EXECUTE STATEMENT SYS."getColumns" :End prepared statement with 4 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: % :end parameter 
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:49 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 251), (SESSIONID = 6), (DATABASE = WorkLogDb), (DRDAID = {399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 251), (SESSIONID = 6), (DATABASE = WorkLogDb), (DRDAID = {399}), Rolling back
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 252), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = {399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 252), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = {399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: CALL SYSIBM.MetaData() :End prepared statement
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: EXECUTE STATEMENT SYSIBM."METADATA" :End prepared statement
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: ? = CALL SYSIBM.CLOBCREATELOCATOR() :End prepared statement with 1 parameters begin parameter #1: null :end parameter 
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: CALL SYSIBM.CLOBRELEASELOCATOR(?) :End prepared statement with 1 parameters begin parameter #1: 1 :end parameter 
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: select sys.sysschemas.schemaname as sequence_schema, sys.syssequences.* from sys.syssequences left join sys.sysschemas on sys.syssequences.schemaid = sys.sysschemas.schemaid :End prepared statement
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 253), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 255), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: CALL SYSIBM.SQLTABLES(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: 'TABLE','VIEW' :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 255), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: EXECUTE STATEMENT SYS."getTables" :End prepared statement with 7 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: T :end parameter begin parameter #5: V :end parameter begin parameter #6: NULL :end parameter begin parameter #7: NULL :end parameter 
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 255), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: CALL SYSIBM.SQLCOLUMNS(?,?,?,?,?) :End prepared statement with 5 parameters begin parameter #1: NULL :end parameter begin parameter #2: APP :end parameter begin parameter #3: NULL :end parameter begin parameter #4: % :end parameter begin parameter #5: DATATYPE='JDBC';DYNAMIC=0;REPORTPUBLICPRIVILEGES=1;CURSORHOLD=1 :end parameter 
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Executing prepared statement: EXECUTE STATEMENT SYS."getColumns" :End prepared statement with 4 parameters begin parameter #1: % :end parameter begin parameter #2: APP :end parameter begin parameter #3: % :end parameter begin parameter #4: % :end parameter 
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Committing
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Rolling back
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_2,5,derby.daemons] (XID = 249), (SESSIONID = 5), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4325705795365492038{389}), Rolling back
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Rolling back
Tue Mar 08 08:17:58 CET 2022 Thread[DRDAConnThread_3,5,derby.daemons] (XID = 257), (SESSIONID = 7), (DATABASE = WorkLogDb), (DRDAID = ��������.����-4255055576211108444{399}), Rolling back
